name: Run on web trigger 🕷

on: 
  workflow_dispatch:
    inputs:
      app_name:
        description: 'Name of the app to run 🛤'     
        required: true
        default: 'hi_nutek'
      arguments:
        description: "App arguments"
        required: false

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}

jobs:
  request-run:
    name: Run container 🍟
    runs-on: ubuntu-latest
    outputs:
      today_is: ${{ steps.step1.outputs.today_is }}
      now: ${{ steps.step2.outputs.now }}
      result: ${{ steps.step3.outputs.result }}
    steps:

      - name: today is
        run: date --iso-8601
        env:
          TODAY_IS: date --iso-8601
      
      - name: now
        run: date --rfc-3339=ns
        env:
          NOW: date --rfc-3339=ns


      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: '${{ secrets.GITHUB }}'
      
      - name: Run
        run: |-
          mkdir -p request/$(TODAY_IS) 2>/dev/null \
          cd request/$(TODAY_IS) \
          touch $(NOW)

      #Alternative option - authentication via credentials json
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Authorize Docker
        run: |-
          echo '${{ secrets.GCP_CREDENTIALS }}' >> pass.json && \
          cat pass.json | \
            docker login -u _json_key --password-stdin https://us-east1-docker.pkg.dev 
        
      - name: Run app 😷  
        run: |-
          result=$(docker run --rm -p 8080:8080 ${{ github.event.inputs.app_name }} ${{ github.event.inputs.arguments }})
        env:
          RESULT: $(result)

      - id: step1
        run: echo "::set-output name=today_is::$(TODAY_IS)"
      - id: step2
        run: echo "::set-output name=now::$(NOW)"
      - id: step3
        run: echo "::set-output name=result::$(RESULT)"
    # save latest version to github
      - name: Commit new version
        uses: "EndBug/add-and-commit@v8"
        with:
          add: "request/$(TODAY_IS)/$(NOW)"
          author_name: "Phoenix Journey bot"
          message: "Commit app request from Phoenix Journey [skip ci]"
          author_email: "github-bot@phoenixjourney.com"

  save-result:
    name: Save result 🎥
    runs-on: ubuntu-latest
    needs: request-run

    steps:
      - name: today is
        run: date --iso-8601
        env:
          TODAY_IS: date --iso-8601

      
      - name: now
        run: echo ${{ needs.request-run.outputs.now }}
        env:
          NOW: ${{ needs.request-run.outputs.now }}

      
      - name: result
        run: echo ${{ needs.request-run.outputs.result }}
        env:
          RESULT: ${{ needs.request-run.outputs.result }}

      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: '${{ secrets.GITHUB }}'

      - name: Add new app run
        run: |-
          mkdir -p result/$(TODAY_IS) 2>/dev/null \
          cd result/$(TODAY_IS) \
          touch $(NOW) \
          $(RESULT) >> \
          $(NOW)
    # save latest version to github
      - name: Commit result        
        uses: "EndBug/add-and-commit@v8"
        with:
          add: "result/$(TODAY_IS)/$(NOW)"
          author_name: "Phoenix Journey bot"
          message: "Commit app result from Phoenix Journey [skip ci]"
          author_email: "github-bot@phoenixjourney.com"
